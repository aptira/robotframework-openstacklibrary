*** Settings ***
Documentation     Engineering Limits Test
Suite Setup       Create Session  admin    ${AUTH_URL}  ${USERNAME}  ${PASSWORD}  ${PROJECT_NAME}  ${DOMAIN_NAME}
Suite Teardown  Delete All Sessions
Library  Collections
Library  String
Library  ../src/OpenStackLibrary/OpenStackKeywords.py
Library  OperatingSystem
Library  SSHLibrary
Library  Process

*** Variables ***
${AUTH_URL}            %{OS_AUTH_URL}
${USERNAME}            %{OS_USERNAME}
${PASSWORD}            %{OS_PASSWORD}
${PROJECT_NAME}        %{OS_PROJECT_NAME}
${DOMAIN_NAME}         %{OS_PROJECT_DOMAIN_NAME}
${MEMBER_ROLE_NAME}    _member_
${HEAT_ROLE_NAME}      swiftoperator
${TEST_PROJECT}        proj_enterpriseedge
${TEST_DOMAIN}         default
${TEST_USER}           testuser
${TEST_FLAVOR_NAME}    testflavor
${TEST_ZONE}           testzone
${NETWORK_ID}           367facbf-18ec-4134-879b-2b8deb7a307c
${PORT_NAME}            testvmport
${KEYPAIR_NAME}         vmtest-key
${PUBKEY_FILE}          /root/.ssh/id_rsa.pub
${SERVER_NAME}          testserver
${IMAGE_UUID}           b9d6a29d-fd30-433c-a39a-7f8cc34ad0ad
${TOTAL_CORES}          10
${TOTAL_INSTANCES}      10
${TOTAL_RAM}            20480
${TOTAL_NETWORKS}       4
${TOTAL_SUBNETS}        4
${TOTAL_PORTS}          100
${TOTAL_SEC_GROUPS}     1
${TOTAL_SEC_GROUP_RULES}   8
${TOTAL_STACKS}         100
${STACK_NAME}           teststack
${HEAT_TEMPLATE}        {"heat_template_version": "2013-05-23",
...    "description": "Template which creates a Swift container resource",   
...    "resources":  {
...  "SwiftContainer": {
...  "type": "OS::Swift::Container" } } }
${TOTAL_IMAGES}         300
${IMAGE_NAME}           test_image
${IMAGE_PATH}           /root/CentOS-7-x86_64-GenericCloud.qcow2
${KEY_FILE}             /root/.ssh/id_rsa
${PKG_DIR}              /opt/engineering-limit-tests/pkgs
${MONITOR_SCRIPT}       vmstat.sh
${MONITOR_OUTPUT_PATH}  %{PWD}/../outputs/

*** Test Cases ***
User Creation
    [Tags]  create
    ${PROJECT}=  Get Project  admin  ${TEST_PROJECT}  ${TEST_DOMAIN}
    ${USER}=  Create User  admin  ${TEST_USER}  ${PROJECT.id}  ${TEST_DOMAIN}  ${EMPTY}  \${userpass}
    ${MEMBER_ROLE}=  Get Role  admin  ${MEMBER_ROLE_NAME}
    Add Role To User  admin  ${MEMBER_ROLE.id}  ${USER.id}  ${PROJECT.id}
    ${HEAT_ROLE}=  Get Role  admin  ${HEAT_ROLE_NAME}
    Add Role To User  admin  ${HEAT_ROLE.id}  ${USER.id}  ${PROJECT.id}
    ${resp}=  Get User  admin  ${TEST_USER}  ${TEST_PROJECT}
    Should Be Equal As Strings  ${resp.name}  ${TEST_USER}

Flavor Creation
    [Tags]  create
    ${FLAVOR}=  Create Flavor   admin  ${TEST_FLAVOR_NAME}
    Set Global Variable  ${FLAVOR}

User Login
    [Tags]  login
    Create Session  user    ${AUTH_URL}  ${TEST_USER}  ${userpass}  ${TEST_PROJECT}  ${TEST_DOMAIN}

Create keypair
    [Tags]  create
    ${rc}       ${PUBLIC_KEY} =    Run and Return Rc And Output  cat ${PUBKEY_FILE}
    Should Be Equal As Integers    ${rc}     0
    ${KEYPAIR_ID}=      Create Keypair  user    ${KEYPAIR_NAME}  ${PUBLIC_KEY}
    Set Global Variable  ${KEYPAIR_ID}

Port Creation 
    [Tags]  create
    ${PORT}=    Create Port    user  ${PORT_NAME}  ${NETWORK_ID}
    Set Global Variable  ${PORT}
    
Server Creation
    [Tags]  create
    ${template} =	OperatingSystem.Get File	${CURDIR}/userdata.txt
    ${userdata} =	Replace Variables	${template}
    ${SERVER}=  Create Server With Port  user  ${SERVER_NAME}  ${IMAGE_UUID}  ${FLAVOR}  default  ${KEYPAIR_NAME}  ${PORT['port']['id']}  ${userdata}
    Set Global Variable  ${SERVER}

Server Verification
    [Tags]  check
    @{INSTANCES}=  Check Servers   user  ${SERVER_NAME}  finished  600
    ${length} =  Get Length  ${INSTANCES}
    Should Be Equal As Integers     ${length}   1

Start iperf3 server
    ${IPERF} =    Start Process       iperf3 -s   stdout=iperf.log   cwd=${CURDIR}    shell=yes
    Set Global Variable  ${IPERF}

Start Monitor
    ${HANDLE} =    Start Process       ${CURDIR}/${MONITOR_SCRIPT} ${KEY_FILE} ${PORT['port']['fixed_ips'][0]['ip_address']}    stdout=${MONITOR_OUTPUT_PATH}vmstat.log   cwd=${CURDIR}    shell=yes
    Set Global Variable  ${HANDLE}

Test Instance
    [Tags]  check
    Open Connection    ${PORT['port']['fixed_ips'][0]['ip_address']}
    Login With Public Key    cloud-user  ${KEY_FILE}
    ${stdout}=  Execute Command  sudo df -h
    Log  ${stdout}
    Put Directory  ${PKG_DIR}  /tmp
    Put File  ${CURDIR}/test.fio
    ${stdout}=  Execute Command  sudo rpm -ivh /tmp/pkgs/*.rpm 2>&1
    Log  ${stdout}
    Close Connection
        
Run CPU stress test
    [Tags]  check
    Open Connection    ${PORT['port']['fixed_ips'][0]['ip_address']}
    Login With Public Key    cloud-user  ${KEY_FILE}
    ${stdout}=  Execute Command  sudo stress -c 2 -t 30
    Log  ${stdout}
    Close Connection

Run MEM stress test
    [Tags]  check
    Open Connection    ${PORT['port']['fixed_ips'][0]['ip_address']}
    Login With Public Key    cloud-user  ${KEY_FILE}
    ${stdout}=  Execute Command  sudo stress --vm-bytes $(awk '/MemFree/{printf "%d\n", $2 * 0.9;}' < /proc/meminfo)k --vm-keep -m 1
    Log  ${stdout}
    Close Connection

Run file system test
    [Tags]  check
    Open Connection    ${PORT['port']['fixed_ips'][0]['ip_address']}
    Login With Public Key    cloud-user  ${KEY_FILE}
    ${stdout}=  Execute Command  sudo fio test.fio
    Log  ${stdout}
    Close Connection

Run network test
    [Tags]  check
    Open Connection    ${PORT['port']['fixed_ips'][0]['ip_address']}
    Login With Public Key    cloud-user  ${KEY_FILE}
    ${stdout}=  Execute Command  sudo iperf3 -c 10.126.192.30 -P 4
    Log  ${stdout}
    Close Connection

Stop iperf3 server
    Terminate Process    ${IPERF}

Stop Monitor
    Terminate Process    ${HANDLE}

Server Deletion
    [Tags]  delete
    Delete Servers   user  ${SERVER_NAME}  300
    
Port Deletion
    [Tags]  delete
    Delete Port  user  ${PORT['port']['id']}

Delete keypair
    [Tags]  delete
    Delete Keypair      user    ${KEYPAIR_ID}

Flavor Deletion
    [Tags]  delete
    Delete Flavor   admin  ${FLAVOR.id}

User Deletion
    [Tags]  delete
    ${resp}=  Get User  admin  ${TEST_USER}  ${TEST_PROJECT}
    Delete User  admin  ${resp.id}
         